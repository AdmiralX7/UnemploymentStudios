{
  "files": [{
    "filename": "index.html",
    "purpose": "Serves as the main entry point for the gameâ€™s web structure. It links together all other resources, such as CSS stylesheets, JavaScript files, and multimedia content, ensuring everything is loaded correctly for the player.",
    "content_guidelines": "Utilize semantic HTML5 elements for accessibility and clarity. Keep HTML files focused on structure, avoiding inline styles or scripts.",
    "dependencies": ["style.css", "boot.js", "preloader.js", "game.js", "music.js", "mainmenu.js"]
  }, {
    "filename": "style.css",
    "purpose": "Manages the visual presentation of the game's user interface, including the layout, colors, fonts, and other stylistic elements.",
    "content_guidelines": "Adopt a modular CSS design using individual stylesheets for components (e.g., UI, character-specific styles), and a separate file for responsive design. Use a consistent class naming convention.",
    "dependencies": null
  }, {
    "filename": "boot.js",
    "purpose": "Responsible for initializing the game environment. It sets up necessary game configurations, preloads essential assets, and sets the stage for transitioning to the main game loop.",
    "content_guidelines": "Ensure all settings are configured before asset loading begins, setting global variables and parameters used in game.js and by the preloader.",
    "dependencies": ["index.html"]
  }, {
    "filename": "preloader.js",
    "purpose": "Manages preloading of game assets (both visual and audio).",
    "content_guidelines": "Ensure all necessary assets are loaded and ready for game.js.",
    "dependencies": ["boot.js", "various assets in Characters, NPCs, etc."]
  }, {
    "filename": "game.js",
    "purpose": "Contains the core game logic, handling game state updates, player interactions, and the main game loop.",
    "content_guidelines": "Utilizes modern coding standards (ES6+) with a focus on maintaining clean architecture with clear classes/functions. Use modular ES6+ syntax with consistent naming, comments, and arrow functions.",
    "dependencies": ["preloader.js", "boot.js"]
  }, {
    "filename": "music.js",
    "purpose": "Manages in-game audio control, including background music and sound effects.",
    "content_guidelines": "Harmonize background music and sound effects to augment player immersion.",
    "dependencies": ["preloader.js"]
  }, {
    "filename": "mainmenu.js",
    "purpose": "Handles the main menu functionalities and UI transitions.",
    "content_guidelines": "Handles user navigation from the main interface through transitions managed by game.js.",
    "dependencies": ["preloader.js"]
  }, {
    "filename": "assets",
    "purpose": "Static resources needed for the game including images, audio, and data files used by other components.",
    "content_guidelines": "Structure assets in directories for efficient texture management and rapid updating or swapping.",
    "dependencies": null
  }]
}